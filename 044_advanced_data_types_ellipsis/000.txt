---------------
 Exercise: 001
---------------

Write a Python function that takes an arbitrary number of arguments using *args and prints each argument.
Use ... to represent unspecified arguments.

func(1, "hello", 2.0)
->      Arg 0: 1
        Arg 1: hello
        Arg 2: 2.0

func()
->      Ellipsis

==============================================================================
---------------
 Exercise: 002
---------------

Write a Python function that takes a function as an argument and calls it with any number of arguments.

==============================================================================
---------------
 Exercise: 003
---------------

Write a Python program that creates a list containing numbers from 1 to 10, but leaves a gap at even positions using
ellipsis.

[1, Ellipsis, 3, Ellipsis, 5, Ellipsis, 7, Ellipsis, 9, Ellipsis]

==============================================================================
---------------
 Exercise: 004
---------------

Write a Python program that checks if a variable is equal to ... and prints a message if it matches.

==============================================================================
---------------
 Exercise: 005
---------------

Write a Python program to create a generator expression that generates a sequence of numbers with ellipsis
representing skipped values.

    Args:
        start (int): The starting value of the sequence.
        end (int): The ending value of the sequence.
        step (int): The step size between values.
        skip_count (int): The number of values to skip with ellipsis. (yield skip_count items, and then skip skip_count items)

    Returns:
        A generator expression for the sequence.

generate_sequence(1, 30, 2, 4)
    ->  1, 3, 5, 7, ..., 11, 13, 15, 17, ..., 21, 23, 25, 27, ...,

==============================================================================
---------------
 Exercise: 006
---------------

Write a Python program that creates a custom class with an 'init' method. Use 'ellipsis' to indicate that some
attributes may be added dynamically.

==============================================================================
