---------------
 Exercise: 001
---------------

Write a Python script to display the various Date Time formats
    a) Current date and time
    b) Current year
    c) Month of year                (As a string)
    d) Week number of the year
    e) Weekday of the week
    f) Day of year
    g) Day of the month
    h) Day of week                  (As a string)


Current date and time:      2025-02-02 17:48:59.480494
Current year:               2025
Month of year:              February
Week number of the year:    04
Weekday of the week:        0
Day of year:                033
Day of the month:           2
Day of week:                Sunday

==============================================================================
---------------
 Exercise: 002
---------------

Write a Python program to determine whether a given year is a leap year.

1900    =>  False
1992    =>  True
2000    =>  True
2004    =>  True

==============================================================================
---------------
 Exercise: 003
---------------

Write a Python program to convert a string to datetime.

Sample String : Jul 1 2014 2:43PM
Expected Output : 2014-07-01 14:43:00

==============================================================================
---------------
 Exercise: 004
---------------

Write a Python program to get the current time in Python.
Sample Format :  18:43:06.408675

==============================================================================
---------------
 Exercise: 005
---------------

Write a Python program to subtract five days from the current date.

Current Date:               2025-02-02
5 days before Current Date: 2025-01-28

==============================================================================
---------------
 Exercise: 006
---------------

Write a Python program to convert a Unix timestamp string to a readable date.

Sample Unix timestamp string:  1284105682
Expected Output:               2010-09-10 11:01:22

==============================================================================
---------------
 Exercise: 007
---------------

Write a Python program to print yesterday, today, tomorrow.

Yesterday:  2025-02-01
Today:      2025-02-02
Tomorrow:   2025-02-03

==============================================================================
---------------
 Exercise: 008
---------------

Write a Python program to convert the date to datetime (midnight of the date) in Python.
Sample Output : 2025-02-02 00:00:00

==============================================================================
---------------
 Exercise: 009
---------------

Write a Python program to print the next 5 days starting today.

2025-02-02
2025-02-03
2025-02-04
2025-02-05
2025-02-06
2025-02-07

==============================================================================
---------------
 Exercise: 010
---------------

Write a Python program to add 5 seconds to the current time.

Current time:   19:03:24.771686
+5 seconds:     19:03:29.771686

==============================================================================
---------------
 Exercise: 011
---------------

Write a Python program to convert Year/Month/Day to Day of Year in Python.

2025/02/02  =>  033

==============================================================================
---------------
 Exercise: 012
---------------

Write a Python program to get the current time in milliseconds in Python.

2025-02-02 19:14:42.272580 -> 1738512882272.5806

==============================================================================
---------------
 Exercise: 013
---------------

Write a Python program to get the week number.
    Hint: Use the ISO Calendar and not the Gregorian Calendar

2015, 6, 16     =>   25

==============================================================================
---------------
 Exercise: 014
---------------

Write a Python program to find the date of the first Monday of a given week.

Sample Year and week:       2015, 50
Expected Output:            Mon Dec 14 2015

==============================================================================
---------------
 Exercise: 015
---------------

Write a Python program to select all the Sundays in a specified year.

2025

2025-01-05, Sun
2025-01-12, Sun
2025-01-19, Sun
2025-01-26, Sun
2025-02-02, Sun
2025-02-09, Sun
2025-02-16, Sun
2025-02-23, Sun
2025-03-02, Sun
2025-03-09, Sun
2025-03-16, Sun
2025-03-23, Sun
2025-03-30, Sun
2025-04-06, Sun
2025-04-13, Sun
2025-04-20, Sun
2025-04-27, Sun
2025-05-04, Sun
2025-05-11, Sun
2025-05-18, Sun
2025-05-25, Sun
2025-06-01, Sun
2025-06-08, Sun
2025-06-15, Sun
2025-06-22, Sun
2025-06-29, Sun
2025-07-06, Sun
2025-07-13, Sun
2025-07-20, Sun
2025-07-27, Sun
2025-08-03, Sun
2025-08-10, Sun
2025-08-17, Sun
2025-08-24, Sun
2025-08-31, Sun
2025-09-07, Sun
2025-09-14, Sun
2025-09-21, Sun
2025-09-28, Sun
2025-10-05, Sun
2025-10-12, Sun
2025-10-19, Sun
2025-10-26, Sun
2025-11-02, Sun
2025-11-09, Sun
2025-11-16, Sun
2025-11-23, Sun
2025-11-30, Sun
2025-12-07, Sun
2025-12-14, Sun
2025-12-21, Sun
2025-12-28, Sun

==============================================================================
---------------
 Exercise: 016
---------------

Write a Python program to add year(s) to a given date and display the updated date.

Date:   2015,1,1

-1  =>  2014-01-01
0   =>  2015-01-01
2   =>  2017-01-01
1   =>  2016-01-01

==============================================================================
---------------
 Exercise: 017
---------------

Write a Python program to drop microseconds from datetime.

2025-02-02 20:47:11.804563 -> 2025-02-02 20:47:11

==============================================================================
---------------
 Exercise: 018
---------------

Write a Python program to get days between two dates.

Sample Dates : 2000,2,28, 2001,2,28
Expected Output : 366 days, 0:00:00

==============================================================================
---------------
 Exercise: 019
---------------

Write a Python program to get the date of the last Tuesday.
    Note: current date is 02-02-2025

2025-01-28, Tue

==============================================================================
---------------
 Exercise: 020
---------------

Write a Python program to get the third Tuesday of a month.

2025-02  =>  2025-02-18, Tue

==============================================================================
---------------
 Exercise: 021
---------------

Write a Python program to get the last day of a specified year and month.

last_day(2025, 1)   =>  2025-01-31
last_day(2025, 2)   =>  2025-02-28
last_day(2024, 2)   =>  2024-02-29
last_day(2025, 12)  =>  2024-12-31

==============================================================================
---------------
 Exercise: 022
---------------

Write a Python program to get the number of days in a given month and year.

2025,  1, 31
2025,  2, 28
2025,  3, 31
2025,  4, 30
2025,  5, 31
2025,  6, 30
2025,  7, 31
2025,  8, 31
2025,  9, 30
2025, 10, 31
2025, 11, 30
2025, 12, 31

==============================================================================
---------------
 Exercise: 023
---------------

Write a Python program to add a month to a specified date.
    Note: the amount of days to be added should be inferred from how many days the current month has (28, 29, 30, or 31)

2014, 12, 25    =>  2015-01-25

==============================================================================
---------------
 Exercise: 024
---------------

Write a Python program to count the number of Mondays on the 1st day of the month from 2015 to 2016.

> 3

==============================================================================
---------------
 Exercise: 025
---------------

Write a Python program to print a string five times, with a delay of three seconds..

==============================================================================
---------------
 Exercise: 026
---------------

Write a Python program that calculates the date six months from the current date using the datetime module.
    Note:   the amount of days to be deleted should be inferred from how many days the current month has
            (28, 29, 30, or 31)

Current Date:               2025-02-03
After subtracting 6 months: 2024-08-06

==============================================================================
---------------
 Exercise: 027
---------------

Write a Python program to create 12 fixed dates from a specified date over a given period.
The difference between two dates is 20.

Current date: 2025-02-03

2025-02-23
2025-03-15
2025-04-04
2025-04-24
2025-05-14
2025-06-03
2025-06-23
2025-07-13
2025-08-02
2025-08-22
2025-09-11
2025-10-01

==============================================================================
---------------
 Exercise: 028
---------------

Write a Python program to get the dates 30 days before and after today.

Before 30 days: 2025-01-04
Current date:   2025-02-03
After 30 days:  2025-03-05

==============================================================================
---------------
 Exercise: 029
---------------

Write a Python program to get GMT and the local time.

Local time: Mon, 03 February 2025 16:33:39 PM
GMT time:   Mon, 03 February 2025 13:33:39 PM

==============================================================================
---------------
 Exercise: 030
---------------

Write a Python program to convert the current date and time to a timestamp.

>   1738590568.194068

==============================================================================
---------------
 Exercise: 031
---------------

Write a Python program to convert a string date to a timestamp.

01/10/2016  =>  1475269200.0

==============================================================================
---------------
 Exercise: 032
---------------

Write a Python program to calculate the number of days between two dates.

2016/10/12, 2015/12/10  =>  307
2016/3/23, 2017/12/10   =>  627

==============================================================================
---------------
 Exercise: 033
---------------

Write a Python program to calculate the number of days between two date times.

2016/10/12 00:00:00, 2015/12/10 00:00:00    =>  307
2016/10/12 00:00:00, 2015/12/10 23:59:59    =>  306

==============================================================================
---------------
 Exercise: 034
---------------

Write a Python program to display the date and time in a human-friendly string.

Monday, February 03, 2025, 05:03 PM

==============================================================================
---------------
 Exercise: 035
---------------

Write a Python program to convert a date to a Unix timestamp.

2016/2/25, 11:23 PM     =>  1456431780.0

==============================================================================
---------------
 Exercise: 036
---------------

Write a Python program to calculate the difference between two dates in seconds.

2015-01-01 01:00:00, 2015-05-27 14:04:03    =>  12661443.0

==============================================================================
---------------
 Exercise: 037
---------------

Write a Python program to convert difference of two dates into days, hours, minutes, and seconds.

2015-01-01 01:15:02, 2015-02-04 03:04:03    =>  34 days, 1 hours, 49 minutes, 1 sec

==============================================================================
---------------
 Exercise: 038
---------------

Write a Python program to get the last modified information of a file.

==============================================================================
---------------
 Exercise: 039
---------------

Write a Python program to calculate an age in (years, week, and days).
    Current date:   2025-02-03

2006-10-12      =>  18 year, 16 weeks, 2 days
1996-11-01      =>  28 year, 13 weeks, 3 days

==============================================================================
---------------
 Exercise: 040
---------------

Write a Python program to get the current date and time information.

Time in seconds since the epoch:    1738599293.296373
Current date and time:              2025-02-03 19:14:53.296373
Alternate date and time:            25-02-03-19-14
Current year:                       2025
Month of year:                      February
Week number of the year:            05
Weekday of the week:                0
Day of year:                        034
Day of the month:                   03
Day of week:                        Monday

==============================================================================
---------------
 Exercise: 041
---------------

Write a Python program to generate a date and time as a string.

2025/02/03 07:17:13 PM

==============================================================================
---------------
 Exercise: 042
---------------

Write a Python program to display formatted text output of a month and start the week on Sunday.
    Hint: use the calendar module

   February 2025
Su Mo Tu We Th Fr Sa
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28

==============================================================================
---------------
 Exercise: 043
---------------

Write a Python program to print a 3-column calendar for an entire year.
    Hint: use the calendar module

                                  2025

      January                   February                   March
Su Mo Tu We Th Fr Sa      Su Mo Tu We Th Fr Sa      Su Mo Tu We Th Fr Sa
          1  2  3  4                         1                         1
 5  6  7  8  9 10 11       2  3  4  5  6  7  8       2  3  4  5  6  7  8
12 13 14 15 16 17 18       9 10 11 12 13 14 15       9 10 11 12 13 14 15
19 20 21 22 23 24 25      16 17 18 19 20 21 22      16 17 18 19 20 21 22
26 27 28 29 30 31         23 24 25 26 27 28         23 24 25 26 27 28 29
                                                    30 31

       April                      May                       June
Su Mo Tu We Th Fr Sa      Su Mo Tu We Th Fr Sa      Su Mo Tu We Th Fr Sa
       1  2  3  4  5                   1  2  3       1  2  3  4  5  6  7
 6  7  8  9 10 11 12       4  5  6  7  8  9 10       8  9 10 11 12 13 14
13 14 15 16 17 18 19      11 12 13 14 15 16 17      15 16 17 18 19 20 21
20 21 22 23 24 25 26      18 19 20 21 22 23 24      22 23 24 25 26 27 28
27 28 29 30               25 26 27 28 29 30 31      29 30

        July                     August                  September
Su Mo Tu We Th Fr Sa      Su Mo Tu We Th Fr Sa      Su Mo Tu We Th Fr Sa
       1  2  3  4  5                      1  2          1  2  3  4  5  6
 6  7  8  9 10 11 12       3  4  5  6  7  8  9       7  8  9 10 11 12 13
13 14 15 16 17 18 19      10 11 12 13 14 15 16      14 15 16 17 18 19 20
20 21 22 23 24 25 26      17 18 19 20 21 22 23      21 22 23 24 25 26 27
27 28 29 30 31            24 25 26 27 28 29 30      28 29 30
                          31

      October                   November                  December
Su Mo Tu We Th Fr Sa      Su Mo Tu We Th Fr Sa      Su Mo Tu We Th Fr Sa
          1  2  3  4                         1          1  2  3  4  5  6
 5  6  7  8  9 10 11       2  3  4  5  6  7  8       7  8  9 10 11 12 13
12 13 14 15 16 17 18       9 10 11 12 13 14 15      14 15 16 17 18 19 20
19 20 21 22 23 24 25      16 17 18 19 20 21 22      21 22 23 24 25 26 27
26 27 28 29 30 31         23 24 25 26 27 28 29      28 29 30 31
                          30

==============================================================================
---------------
 Exercise: 044
---------------

Write a Python program to display a calendar for a locale.
    Hint: use the calendar module

   February 2025
Su Mo Tu We Th Fr Sa
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28

==============================================================================
---------------
 Exercise: 045
---------------

Write a Python program to get the current week.

year: 2025, #week: 6, #weekday: 1

==============================================================================
---------------
 Exercise: 046
---------------

Write a Python program to create a HTML calendar with data for a specific year and month.
    Hint: sue the calendar module

<table border="0" cellpadding="0" cellspacing="0" class="month">
<tr><th colspan="7" class="month">February 2025</th></tr>
<tr><th class="sun">Sun</th><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th></tr>
<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="sat">1</td></tr>
<tr><td class="sun">2</td><td class="mon">3</td><td class="tue">4</td><td class="wed">5</td><td class="thu">6</td><td class="fri">7</td><td class="sat">8</td></tr>
<tr><td class="sun">9</td><td class="mon">10</td><td class="tue">11</td><td class="wed">12</td><td class="thu">13</td><td class="fri">14</td><td class="sat">15</td></tr>
<tr><td class="sun">16</td><td class="mon">17</td><td class="tue">18</td><td class="wed">19</td><td class="thu">20</td><td class="fri">21</td><td class="sat">22</td></tr>
<tr><td class="sun">23</td><td class="mon">24</td><td class="tue">25</td><td class="wed">26</td><td class="thu">27</td><td class="fri">28</td><td class="noday">&nbsp;</td></tr>
</table>

==============================================================================
---------------
 Exercise: 047
---------------

Write a Python program display a list of the dates for the 2nd Saturday of every month for a given year.

2025

2025-01-11 Sat
2025-02-08 Sat
2025-03-08 Sat
2025-04-12 Sat
2025-05-10 Sat
2025-06-14 Sat
2025-07-12 Sat
2025-08-09 Sat
2025-09-13 Sat
2025-10-11 Sat
2025-11-08 Sat
2025-12-13 Sat

==============================================================================
---------------
 Exercise: 048
---------------

Write a Python program to display a simple, formatted calendar of a given year and month.
    Hint: use the calendar module

   February 2025
Su Mo Tu We Th Fr Sa
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28

==============================================================================
---------------
 Exercise: 049
---------------

Write a Python program to convert a string into datetime

2025/02/03  08:11:47 pm     =>  2025-02-03 20:11:47

==============================================================================
---------------
 Exercise: 050
---------------

Write a Python program to get a list of dates between two dates.

2025-01-25, 2025-02-03

2025-01-26
2025-01-27
2025-01-28
2025-01-29
2025-01-30
2025-01-31
2025-02-01
2025-02-02

==============================================================================
---------------
 Exercise: 051
---------------

Write a Python program to get the current UTC datetime and convert it to the current timezone and then print it in the
ISO 8601 format

2025-02-03T20:24:31.522622+03:00

==============================================================================
---------------
 Exercise: 052
---------------

Write a Python program to get the first and last time moment.

First second: 00:00:00
Last second:  23:59:59.999999

==============================================================================
---------------
 Exercise: 053
---------------

Write a Python program to validate a Gregorian date. The month is between 1 and 12 inclusive, the day is within the
allowed number of days for the given month. Leap year's are taken into consideration. The year is between MINYEAR and
MAXYEAR inclusive.

m,  d,  y
11, 11, 2002        =>  True
13, 11, 2002        =>  False

==============================================================================
---------------
 Exercise: 054
---------------

The epoch is the point where time starts, and is platform dependent. For Unix, the epoch is January 1, 1970,
00:00:00 (UTC). Write a Python program to find out what the epoch is on a given platform. Convert a given time in
seconds since the epoch (3600).

1970-01-01 00:00:00
1970-01-01 01:00:00

==============================================================================
---------------
 Exercise: 055
---------------

Write a Python program to get time values with components using local time and gmtime.

time.struct_time(tm_year=2025, tm_mon=2, tm_mday=3, tm_hour=20, tm_min=44, tm_sec=52, tm_wday=0, tm_yday=34, tm_isdst=0)

==============================================================================
---------------
 Exercise: 056
---------------

Write a Python program that can suspend execution of a given script for a given number of seconds.

Sorry, Slept for 3 seconds...
Sorry, Slept for 3 seconds...
Sorry, Slept for 3 seconds...
Sorry, Slept for 3 seconds...

==============================================================================
---------------
 Exercise: 057
---------------

Write a Python program to convert a given time in seconds since the epoch to a string representing local time.

236543789   =>  Thu Jun 30 21:36:29 1977

==============================================================================
---------------
 Exercise: 058
---------------

Write a Python program that takes a given number of seconds and passes since the epoch as an argument.
Print structure time in local time.

414538698
time.struct_time(tm_year=1983, tm_mon=2, tm_mday=20, tm_hour=0, tm_min=38, tm_sec=18, tm_wday=6, tm_yday=51, tm_isdst=0)

==============================================================================
---------------
 Exercise: 059
---------------

Write a Python program that takes a tuple containing 9 elements corresponding to structure time as an argument and
returns a string representing it.

(2020, 1, 22, 2, 34, 6, 6, 362, 0)  =>  Sun Jan 22 02:34:06 2020

==============================================================================
---------------
 Exercise: 060
---------------

Write a Python program to parse a string representing time and return the time structure.

22 January, 2020

time.struct_time(tm_year=2020, tm_mon=1, tm_mday=22, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=2, tm_yday=22, tm_isdst=-1)

==============================================================================
