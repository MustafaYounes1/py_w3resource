---------------
 Exercise: 001
---------------

Write a Python program to find those numbers which are divisible by 7 and multiples of 5, between 1500 and
2700 (both included).

==============================================================================
---------------
 Exercise: 002
---------------

Write a Python program to convert temperatures to and from Celsius and Fahrenheit.
[ Formula : c/5 = (f-32) / 9 [ where c = temperature in celsius and f = temperature in fahrenheit ]

Expected Output :
60°C is 140 in Fahrenheit
45°F is 7 in Celsius

==============================================================================
---------------
 Exercise: 003
---------------

Write a Python program to guess a number between 1 and 9.
Note : User is prompted to enter a guess. If the user guesses wrong then the prompt appears again until the guess
is correct, on successful guess, user will get a "Well guessed!" message, and the program will exit.

==============================================================================
---------------
 Exercise: 004
---------------

Write a Python program to construct the following pattern, using a nested for loop.

*
* *
* * *
* * * *
* * * * *
* * * *
* * *
* *
*

==============================================================================
---------------
 Exercise: 005
---------------

Write a Python program that accepts a word from the user and reverses it.

ecruoser3w     =>   w3resource

==============================================================================
---------------
 Exercise: 006
---------------

Write a Python program to count the number of even and odd numbers in a series of numbers

Sample numbers : numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9)
Expected Output :
Number of even numbers : 4
Number of odd numbers : 5

==============================================================================
---------------
 Exercise: 007
---------------

Write a Python program that prints each item and its corresponding type from the following list.

Sample List :
datalist = [1452, 11.23, 1+2j, True, 'w3resource', (0, -1), [5, 12], {"class":'V', "section":'A'}]

==============================================================================
---------------
 Exercise: 008
---------------

Write a Python program that prints all the numbers from 0 to 6 except 3 and 6.
Note : Use 'continue' statement.
Expected Output : 0 1 2 4 5

==============================================================================
---------------
 Exercise: 009
---------------

Write a Python program to get the Fibonacci series between 0 and 50.
Note : The Fibonacci Sequence is the series of numbers :
0, 1, 1, 2, 3, 5, 8, 13, 21, ....
Every next number is found by adding up the two numbers before it.
Expected Output : 1 1 2 3 5 8 13 21 34

==============================================================================
---------------
 Exercise: 010
---------------

Write a Python program that iterates the integers from 0 to 50.
For multiples of three print "Fizz" instead of the number and for multiples of five print "Buzz".
For numbers that are multiples of three and five, print "FizzBuzz".
Sample Output :
fizzbuzz
1
2
fizz
4
buzz

==============================================================================
---------------
 Exercise: 011
---------------

Write a Python program that takes two digits m (row) and n (column) as input and generates a two-dimensional array.
The element value in the i-th row and j-th column of the array should be i*j.
Note :
i = 0,1.., m-1
j = 0,1, n-1.

Test Data : Rows = 3, Columns = 4
Expected Result : [[0, 0, 0, 0], [0, 1, 2, 3], [0, 2, 4, 6]]

==============================================================================
---------------
 Exercise: 012
---------------

Write a Python program that accepts a sequence of lines (blank line to terminate) as input and prints the lines as
output (all characters in lower case)

==============================================================================
---------------
 Exercise: 013
---------------

Write a Python program that accepts a sequence of comma separated 4 digit binary numbers as its input.
The program will print the numbers that are divisible by 5 in a comma separated sequence.
Sample Data : 0100,0011,1010,1001,1100,1001
Expected Output : 1010

==============================================================================
---------------
 Exercise: 014
---------------

Write a Python program that accepts a string and calculates the number of digits and letters.
Sample Data : Python 3.2
Expected Output :
Letters 6
Digits 2

==============================================================================
---------------
 Exercise: 015
---------------

Write a Python program to check the validity of passwords input by users.
Validation :

At least 1 letter between [a-z] and 1 letter between [A-Z].
At least 1 number between [0-9].
At least 1 character from [$#@].
Minimum length 6 characters.
Maximum length 16 characters.

==============================================================================
---------------
 Exercise: 016
---------------

Write a Python program to find numbers between 100 and 400 (both included) where each digit of a number is an even
number. The numbers obtained should be printed in a comma-separated sequence.

200,202,204,206,208,220,222,224,226,228,240,242,244,246,248,260,262,264,266,268,280,282,284,286,288,400

==============================================================================
---------------
 Exercise: 017
---------------

Write a Python program to print the alphabet pattern 'A'.
Expected Output:

  ***
 *   *
 *   *
 *****
 *   *
 *   *
 *   *

==============================================================================
---------------
 Exercise: 018
---------------

Write a Python program to print the alphabet pattern 'D'.
Expected Output:

 ****
 *   *
 *   *
 *   *
 *   *
 *   *
 ****

==============================================================================
---------------
 Exercise: 019
---------------

Write a Python program to print the alphabet pattern 'E'.
Expected Output:

 *****
 *
 *
 ****
 *
 *
 *****

==============================================================================
---------------
 Exercise: 020
---------------

Write a Python program to print the alphabet pattern 'G'.
Expected Output:

  ***
 *   *
 *
 * ***
 *   *
 *   *
  ***

==============================================================================
---------------
 Exercise: 021
---------------

Write a Python program to print the alphabet pattern 'L'.
Expected Output:

 *
 *
 *
 *
 *
 *
 *****

==============================================================================
---------------
 Exercise: 022
---------------

Write a Python program to print the alphabet pattern 'M'.
Expected Output:

  *       *
  *       *
  * *   * *
  *   *   *
  *       *
  *       *
  *       *

==============================================================================
---------------
 Exercise: 023
---------------

Write a Python program to print the alphabet pattern 'O'.
Expected Output:

  ***
 *   *
 *   *
 *   *
 *   *
 *   *
  ***

==============================================================================
---------------
 Exercise: 024
---------------

Write a Python program to print the alphabet pattern 'P'.
Expected Output:

 ****
 *   *
 *   *
 ****
 *
 *
 *

==============================================================================
---------------
 Exercise: 025
---------------

Write a Python program to print the alphabet pattern 'R'.
Expected Output:

 ****
 *   *
 *   *
 ****
 * *
 *  *
 *   *

==============================================================================
---------------
 Exercise: 026
---------------

Write a Python program to print the following patterns.
Expected Output:

  ****
 *
 *
  ***
     *
     *
 ****

 ooooooooooooooooo
ooooooooooooooooo
ooooooooooooooooo
oooo
oooo
oooo
ooooooooooooooooo
ooooooooooooooooo
ooooooooooooooooo
             oooo
             oooo
             oooo
ooooooooooooooooo
ooooooooooooooooo
ooooooooooooooooo

==============================================================================
---------------
 Exercise: 027
---------------

Write a Python program to print the alphabet pattern 'T'.
Expected Output:
 *****
   *
   *
   *
   *
   *
   *

==============================================================================
---------------
 Exercise: 028
---------------

Write a Python program to print the alphabet pattern 'U'.
Expected Output:

 *   *
 *   *
 *   *
 *   *
 *   *
 *   *
  ***

==============================================================================
---------------
 Exercise: 029
---------------

Write a Python program to print the alphabet pattern 'X'.
Expected Output:

 *   *
 *   *
  * *
   *
  * *
 *   *
 *   *

==============================================================================
---------------
 Exercise: 030
---------------

Write a Python program to print the alphabet pattern 'Z'.
Expected Output:

*******
     *
    *
   *
  *
 *
*******

==============================================================================
---------------
 Exercise: 031
---------------

Write a Python program to calculate a dog's age in dog years.
Note: For the first two years, a dog year is equal to 10.5 human years. After that, each dog year equals 4 human years.
Expected Output:

Input a dog's age in dog years: 15
The dog's age in human years is 73

==============================================================================
---------------
 Exercise: 032
---------------

Write a Python program to check whether an alphabet is a vowel or consonant.
Expected Output:

Input a letter of the alphabet: k
k is a consonant.

==============================================================================
---------------
 Exercise: 033
---------------

Write a Python program to convert a month name to a number of days.
Expected Output:

List of months: January, February, March, April, May, June, July, August
, September, October, November, December
Input the name of Month: February
No. of days: 28/29 days

==============================================================================
---------------
 Exercise: 034
---------------

Write a Python program to sum two integers. However, if the sum is between 15 and 20 it will return 20.

==============================================================================
---------------
 Exercise: 035
---------------

Write a Python program that checks whether a string represents an integer or not.
Expected Output:

Input a string: Python
The string is not an integer

==============================================================================
---------------
 Exercise: 036
---------------

Write a Python program to check if a triangle is equilateral, isosceles or scalene.
Note :
An equilateral triangle is a triangle in which all three sides are equal.
A scalene triangle is a triangle that has three unequal sides.
An isosceles triangle is a triangle with (at least) two equal sides.
Expected Output:

Input lengths of the triangle sides:
x: 6
y: 8
z: 12
Scalene triangle

==============================================================================
---------------
 Exercise: 037
---------------

Write a Python program that reads a month and prints the season for that month.
Expected Output:

Input the month (e.g. January, February etc.): April
Season is Spring

==============================================================================
---------------
 Exercise: 038
---------------

Write a Python program to display the astrological sign for a given date of birth.

Input birthday: 15
Input month of birth (e.g. march, july etc): may
Your Astrological sign is : Taurus

==============================================================================
---------------
 Exercise: 039
---------------

Write a Python program to display the sign of the Chinese Zodiac for the given year in which you were born.
Expected Output:

Input your birth year: 1973
Your Zodiac sign : Ox

==============================================================================
---------------
 Exercise: 040
---------------

Write a Python program to find the median of three values.
Expected Output:

Input first number: 15
Input second number: 26
Input third number: 29
The median is 26.0

==============================================================================
---------------
 Exercise: 041
---------------

Write a Python program to get the next day of a given date.
Expected Output:

Input a year: 2016
Input a month [1-12]: 08
Input a day [1-31]: 23
The next date is [yyyy-mm-dd] 2016-8-24

==============================================================================
---------------
 Exercise: 042
---------------

Write a Python program to calculate the sum and average of n integer numbers (input from the user). Input 0 to finish.

==============================================================================
---------------
 Exercise: 043
---------------

Write a Python program to create the multiplication table (from 1 to 10) of a number.
Expected Output:

Input a number: 6
6 x 1 = 6
6 x 2 = 12
6 x 3 = 18
6 x 4 = 24
6 x 5 = 30
6 x 6 = 36
6 x 7 = 42
6 x 8 = 48
6 x 9 = 54
6 x 10 = 60

==============================================================================
---------------
 Exercise: 044
---------------

Write a Python program to construct the following pattern, using a nested loop number.
Expected Output:

1
22
333
4444
55555
666666
7777777
88888888
999999999

==============================================================================
