---------------
 Exercise: 001
---------------

Write a Python program that performs common set operations like union, intersection, and difference of two frozensets.

[1, 2, 3, 4, 5], [0, 1, 3, 7, 8, 10]

Union:              {0, 1, 2, 3, 4, 5, 7, 8, 10}
Intersection:       {1, 3}
difference(a, b)    {2, 4, 5}
difference(b, a)    {0, 8, 10, 7}

==============================================================================
---------------
 Exercise: 002
---------------

Write a Python program that converts a "frozen set" to a regular set and vice versa. Compare the differences between
these two data types.

==============================================================================
---------------
 Exercise: 003
---------------

Write a Python function that calculates the symmetric difference between two frozenset instances.

[1, 2, 3, 4, 5, 6], [4, 5, 6, 7, 8] =>  {1, 2, 3, 7, 8}

==============================================================================
---------------
 Exercise: 004
---------------

Write a Python program that implements a function to generate the power set (set of all subsets) of a given frozenset.

[1, 2, 3, 4]
   =>   frozenset()
        frozenset({1})
        frozenset({2})
        frozenset({1, 2})
        frozenset({3})
        frozenset({1, 3})
        frozenset({2, 3})
        frozenset({1, 2, 3})
        frozenset({4})
        frozenset({1, 4})
        frozenset({2, 4})
        frozenset({1, 2, 4})
        frozenset({3, 4})
        frozenset({1, 3, 4})
        frozenset({2, 3, 4})
        frozenset({1, 2, 3, 4})

==============================================================================
---------------
 Exercise: 005
---------------

Write a Python program to check if two frozensets are disjoint (set has no elements in common with other).

{1, 2, 3, 4, 5}, {6, 7, 8}      =>  True
{1, 2, 3, 4}, {4, 5, 6, 7, 8}   =>  False

==============================================================================
---------------
 Exercise: 006
---------------

Write a Python program that uses a frozenset as a key in a dictionary.

==============================================================================
---------------
 Exercise: 007
---------------

Write a Python program that generates a frozenset containing the squares of all odd numbers from 1 to 15 using set
comprehension.

frozenset({1, 121, 225, 9, 169, 81, 49, 25})

==============================================================================
