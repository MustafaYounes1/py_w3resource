---------------
 Exercise: 001
---------------

Write a Python function that filters out even numbers from a list of integers using the filter function.

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]   =>  [1, 3, 5, 7, 9]

==============================================================================
---------------
 Exercise: 002
---------------

Write a Python program that uses the filter function to extract all uppercase letters from a list of mixed-case strings.

["Hello", "w3resource", "Python", "Filter", "Learning"]     =>  ['H', 'P', 'F', 'L']

==============================================================================
---------------
 Exercise: 003
---------------

Write a Python function that filters out all elements less than or equal than a specified value from a list of numbers
using the filter function.

[20, 15, 24, 37, 23, 11, 7], 20     =>  [20, 15, 11, 7]

==============================================================================
---------------
 Exercise: 004
---------------

Write a Python program that creates a list of names and uses the filter function to extract names that start with
a vowel (A, E, I, O, U).

['Elita', 'Vitold', 'Audovacar', 'Kerensa', 'Ramana', 'Iolanda', 'Landyn']  =>  ['Elita', 'Audovacar', 'Iolanda']

==============================================================================
---------------
 Exercise: 005
---------------

Write a Python function that filters out all empty strings from a list of strings using the filter function.

['', 'w3resource', 'Filter', '', 'Python', '']  =>  ['w3resource', 'Filter', 'Python']

==============================================================================
---------------
 Exercise: 006
---------------

Write a Python program that creates a list of dictionaries containing student information (name, age, grade) and uses
the filter function to extract students with a grade greater than or equal to 95.

students = [
    {"name": "Denis Helio", "age": 17, "grade": 97},
    {"name": "Hania Mehtap", "age": 16, "grade": 92},
    {"name": "Kelan Stasys", "age": 17, "grade": 90},
    {"name": "Velvet Mirko", "age": 16, "grade": 94},
    {"name": "Delores Aeneas", "age": 17, "grade": 100},
]

[{'name': 'Denis Helio', 'age': 17, 'grade': 97}, {'name': 'Delores Aeneas', 'age': 17, 'grade': 100}]

==============================================================================
---------------
 Exercise: 007
---------------

Write a Python program that filters out prime numbers from a list of integers using the filter function.

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]     =>  [2, 3, 5, 7, 11, 13, 17]

==============================================================================
---------------
 Exercise: 008
---------------

Write a Python program that creates a list of words and use the filter function to extract words that contain more
than five letters.

['Red', 'Green', 'Orange', 'White', 'Black', 'Pink', 'Yellow']     =>   ['Orange', 'Yellow']

==============================================================================
---------------
 Exercise: 009
---------------

Write a Python function that filters out elements from a list of strings containing a specific substring using the
filter function.

['Red', 'Green', 'Orange', 'White', 'Black', 'Pink', 'Yellow'], "l"     =>  ['Black', 'Yellow']

==============================================================================
---------------
 Exercise: 010
---------------

Write a Python program that implements a Python program that filters out dates (in the format "YYYY-MM-DD") that are
in the future using the filter function.

Note: the date at the time of writing of this doc: 2025-01-28

["2023-07-11", "2022-02-22", "2024-05-11", "3040-12-31", "2021-01-01"]      =>  ['3040-12-31']

==============================================================================
---------------
 Exercise: 011
---------------

Write a Python program that creates a list of tuples, each containing a city name and its population. Use the filter
function to extract cities with a population greater than 2 million.

cities = [
    ("New York", 8_500_000),
    ("Los Angeles", 4_000_000),
    ("Chicago", 2_700_000),
    ("Houston", 2_300_000),
    ("Phoenix", 1_600_000),
    ("Philadelphia", 1_500_000),
    ("San Antonio", 1_500_000),
]

[('New York', 8500000), ('Los Angeles', 4000000), ('Chicago', 2700000), ('Houston', 2300000)]

==============================================================================
